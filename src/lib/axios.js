import axios from 'axios'

const api = axios.create({
  baseURL: import.meta.env.VITE_API_URL,
  withCredentials: true,
})

// üîÑ –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
api.interceptors.response.use(
  (res) => res,
  async (error) => {
    const originalRequest = error.config

    // –ï—Å–ª–∏ access_token –∏—Å—Ç—ë–∫ –∏ —ç—Ç–æ –Ω–µ /refresh
    if (
      error.response?.status === 401 &&
      !originalRequest._retry &&
      !originalRequest.url.includes('/refresh')
    ) {
      originalRequest._retry = true

      try {
        const refreshRes = await api.post('/user/refresh')
        const newAccessToken = refreshRes.data.access_token
        localStorage.setItem('access_token', newAccessToken)

        // –û–±–Ω–æ–≤–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–≤—Ç–æ—Ä–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`
        return api(originalRequest)
      } catch (refreshError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', refreshError)
        // –º–æ–∂–Ω–æ: redirect –Ω–∞ login
        return Promise.reject(refreshError)
      }
    }

    return Promise.reject(error)
  }
)

export default api
