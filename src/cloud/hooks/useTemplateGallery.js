import { useEffect, useState } from 'react'

export default function useTemplateGallery() {
  const [groups, setGroups] = useState([])
  const [files, setFiles] = useState([])

  useEffect(() => {
    async function fetchLibrary() {
      try {
        const res = await fetch(`${import.meta.env.VITE_API_URL}/cloud/library`)
        const data = await res.json()
        const base = import.meta.env.VITE_LIBRARY_ASSETS_URL || ''

        console.log('[üì¶ useTemplateGallery] –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', data)

        const grouped = {}

        for (const group of data) {
          const parent = group.category_type === 'products' ? '–¢–û–í–ê–†–´' : '–°–ò–°–¢–ï–ú–ù–´–ï'
          if (!grouped[parent]) grouped[parent] = []
          grouped[parent].push({
            id: group.code, // üß† –≤–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º code –∫–∞–∫ id
            title: group.description || group.name,
            code: group.code,
          })
        }

        const mergedGroups = Object.entries(grouped).map(([title, children]) => ({
          title,
          children,
        }))

        console.log('[üß≠ useTemplateGallery] –ì—Ä—É–ø–ø—ã:', mergedGroups)
        setGroups(mergedGroups)

        const allFiles = data.flatMap((group) =>
          group.images.map((img) => ({
            ...img,
            category: group.code, // üõ†Ô∏è –∏—Å–ø–æ–ª—å–∑—É–µ–º group.code –∫–∞–∫ category!
            url: base + (img.medium_url || img.url),
            big_url: base + (img.big_url || img.url),
            medium_url: base + (img.medium_url || img.url),
            small_url: base + (img.small_url || img.url),
          }))
        )

        console.log('[üñºÔ∏è useTemplateGallery] –§–∞–π–ª—ã:', allFiles)
        setFiles(allFiles)
      } catch (err) {
        console.error('[‚ùå useTemplateGallery] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err)
      }
    }

    fetchLibrary()
  }, [])

  return { groups, files }
}
