// src/components/BlockDetails.jsx
import { useState, useEffect } from 'react'
import { useParams } from 'react-router-dom'
import { useSiteSettings } from '@/context/SiteSettingsContext'
import { previewBlocks } from '@/preview/blockMap'

// –ò–º–ø–æ—Ä—Ç—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ –±–ª–æ–∫–æ–≤
import NavigationEditor from '@/components/BlockForms/Navigation'
import HeaderEditor from '@/components/BlockForms/Header'
import BannerEditor from '@/components/BlockForms/Banner'
import QuickInfoEditor from '@/components/BlockForms/QuickInfo'
import PromoEditor from '@/components/BlockForms/PromoCards'
import ProductsEditor from '@/components/BlockForms/PopularItems'
import TabsEditor from '@/components/BlockForms/MenuTabs'
import ProductGridEditor from '@/components/BlockForms/ProductGrid'
import ReviewsEditor from '@/components/BlockForms/Reviews'
import DeliveryEditor from '@/components/BlockForms/Delivery'
import TextEditor from '@/components/BlockForms/Text'
import FooterEditor from '@/components/BlockForms/Footer'

export default function BlockDetails({ block, data, onSave }) {
  const [form, setForm] = useState({})
  const { slug } = useParams()
  const { site_name } = useSiteSettings() // –ò—Å–ø–æ–ª—å–∑—É–µ–º useSiteSettings –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

  useEffect(() => {
    if (!block?.real_id) return // `data` –∏–∑ useSiteSettings –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ form –∑–¥–µ—Å—å.
                               // –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `block` –ø—Ä–æ–ø—Å, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

    console.log('üì¶ BlockDetails: –ò—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–ø—Å "block" (–ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç –±–ª–æ–∫–∞):', block);
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã, —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—è –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã settings –∏ data –±–ª–æ–∫–∞
    setForm({
      ...block.settings, // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (alignment, padding_x, text_color –∏ —Ç.–¥.)
      ...block.data,     // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (city, subtitle, rating_value –∏ —Ç.–¥.)
      block_id: block.real_id, // –î–æ–±–∞–≤–ª—è–µ–º block_id
      slug: block.slug,        // –î–æ–±–∞–≤–ª—è–µ–º slug
      id: block.id,            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ –±–ª–æ–∫–∞
      type: block.type,
      order: block.order,
      active: block.active,
      label: block.label,
    })

    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
    console.log('üì¶ BlockDetails: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã (form):', form);

  }, [block]) // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç `block`, —Ç–∞–∫ –∫–∞–∫ `form` —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏–∑ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤.
              // `data` –∏–∑ useSiteSettings –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é `form` –∑–¥–µ—Å—å.

  if (!block || !block.real_id) {
    return <p className="text-gray-500 text-sm">‚ùó –í—ã–±–µ—Ä–∏—Ç–µ –±–ª–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</p>
  }

  const renderPreview = () => {
    const PreviewComponent = previewBlocks[block.type]
    if (!PreviewComponent) {
      return (
        <div className="border rounded shadow-sm p-4 bg-gray-50 text-sm text-gray-500">
          –ù–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ preview –¥–ª—è –±–ª–æ–∫–∞ —Ç–∏–ø–∞ <strong>{block.type}</strong>
        </div>
      )
    }

    return (
      <div>
        {/* –í PreviewComponent –ø–µ—Ä–µ–¥–∞–µ–º "form" –∫–∞–∫ "settings".
            –¢–µ–ø–µ—Ä—å "form" - —ç—Ç–æ –ø–ª–æ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–º–∏ –ø–æ–ª—è–º–∏. */}
        <PreviewComponent settings={form} />
      </div>
    )
  }

  const sharedProps = {
    block,
    data: form, // –¢–µ–ø–µ—Ä—å 'data' –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ —ç—Ç–æ –ø–ª–æ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç 'form'
    onChange: setForm,
    slug,
    site_name,
  }

  const renderEditor = () => {
    switch (block.type) {
      case 'navigation':
        return <NavigationEditor {...sharedProps} />
      case 'header':
        return <HeaderEditor {...sharedProps} />
      case 'banner':
        return <BannerEditor {...sharedProps} />
      case 'info':
        return <QuickInfoEditor {...sharedProps} />
      case 'promo':
        return <PromoEditor {...sharedProps} />
      case 'products':
        return <ProductsEditor {...sharedProps} />
      case 'tabs':
        return <TabsEditor {...sharedProps} />
      case 'product_grid':
        return <ProductGridEditor {...sharedProps} />
      case 'reviews':
        return <ReviewsEditor {...sharedProps} />
      case 'delivery':
        return <DeliveryEditor {...sharedProps} />
      case 'text':
        return <TextEditor {...sharedProps} />
      case 'footer':
        return <FooterEditor {...sharedProps} />
      default:
        return (
          <p className="text-sm text-gray-500">
            –†–µ–¥–∞–∫—Ç–æ—Ä –±–ª–æ–∫–∞ "{block.type}" –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω
          </p>
        )
    }
  }

  return (
    <div className="space-y-6">
      {renderPreview()}
      <h2 className="text-lg font-semibold mt-4">
        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ "{block.label || block.type}"
      </h2>
      <div className="space-y-4">{renderEditor()}</div>
    </div>
  )
}